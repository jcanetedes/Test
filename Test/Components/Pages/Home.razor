@page "/"
@using System.Reflection
@using Test.Core

<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>

<div id="dynamicComponentContainer">
    @if(dynamicComponent1 is not null && dynamicComponent2 is not null){
        @dynamicComponent1
        @dynamicComponent2
        @dynamicComponent3
    }
</div>

@code {
    private RenderFragment dynamicComponent1;
    private RenderFragment dynamicComponent2;
    private RenderFragment dynamicComponent3;

    private List<CapAssembly> CapAssemblies = new List<CapAssembly>
    {
        new CapAssembly{ AssemblyName = "Plugin1", Path ="Plugins/Debug/net8.0/Plugin1.dll", DefaultComponent = "Index"},
        new CapAssembly{ AssemblyName = "Plugin2", Path ="Plugins/Debug/net8.0/Plugin2.dll", DefaultComponent = "Index"},
        new CapAssembly{ AssemblyName = "Plugin3", Path ="Plugins/Debug/net8.0/Plugin3.dll", DefaultComponent = "Index"}
    };
    protected override async Task OnInitializedAsync()
    {
        await LoadDynamicLibraries();
    }
    private async Task LoadDynamicLibraries()
    {
        await LoadDynamicLibrary();
    }

    private async Task LoadDynamicLibrary()
    {
        foreach (var capAssembly in CapAssemblies)
        {
            try
            {
                
                var assembly = Assembly.LoadFrom(capAssembly.Path);
                if (assembly is not null)
                {
                    var types = assembly.GetTypes();
                    var type = assembly.GetType($"{capAssembly.AssemblyName}.{capAssembly.DefaultComponent}");
                    if (type is null)
                        return;

                    var manifest = (object)Activator.CreateInstance(type)!;

                    if (manifest is not null && type is not null)
                    {


                        var componentId = Guid.NewGuid().ToString("N");

                        var renderFragment = (RenderFragment)(builder =>
                        {
                            builder.OpenComponent(0, type);
                            builder.CloseComponent();
                        });

                        if (capAssembly.AssemblyName == "Plugin1")
                            dynamicComponent1 = renderFragment;
                        else if (capAssembly.AssemblyName == "Plugin2")
                            dynamicComponent2 = renderFragment;
                        else if (capAssembly.AssemblyName == "Plugin3")
                            dynamicComponent3 = renderFragment;
                    }
                }
            }catch(Exception ex)
            {
                
            }
        }
       
    }
}
